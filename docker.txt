编写Dockerfile文件
FROM node:8.4
COPY . /app
WORKDIR /app
RUN npm install --registry=https://registry.npm.taobao.org
EXPOSE 3000

FROM node:8.4：该 image 文件继承官方的 node image，冒号表示标签，这里标签是8.4，即8.4版本的 node。
COPY . /app：将当前目录下的所有文件（除了.dockerignore排除的路径），都拷贝进入 image 文件的/app目录。
WORKDIR /app：指定接下来的工作路径为/app。
RUN npm install：在/app目录下，运行npm install命令安装依赖。注意，安装后所有的依赖，都将打包进入 image 文件。
EXPOSE 3000：将容器 3000 端口暴露出来， 允许外部连接这个端口。


创建镜像
docker image build -t koa-demo:0.0.1 .


删除镜像
docker rmi [imageID]


查看镜像
docker images


生成容器
docker run --name [containerName] -p 8000:3000 -it koa-demo:0.0.1 /bin/bash

开启正在运行的容器
docker exec -it [containerID] bash


开启容器
docker start [containerID]


停止容器
docker start [containerID]


删除容器
docker rm [containerID]


查看正在运行的容器
docker ps


查看所有的容器
docker ps -a


生成容器mongo
docker run -p 27017:27017 -v  /d/mongodb/data:/data -d mongo        


生成容器mysql
docker run -p 3306:3306 -v  /d/mysql/conf:/etc/mysql/conf.d -v  /d/mysql/logs:/logs -v  /d/mysql/data:/var/lib/mysql -e MYSQL_ROOT_PASSWORD=123456 -d mysql



导出
docker export cbe3cb7799ed >  D:/docker/update.tar


导入
docker import  D:/docker/update.tar


保存
docker save cbe3cb7799ed -o  D:/docker/update.tar


加载
docker load -i D:/docker/update.tar


docker run --name ecast-web -p 8001:8001 -v /e/mywork/ecast-web:/home/ecast-web -it 520293d9f787
docker run --name ecast-php -p 8443:8001 -v E:\mywork\ecast-web-old:/var/www/html -d img4
