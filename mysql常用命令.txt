常用数据类型
int :整型，4个字节
double:浮点型，例如double(5,2)表示最多5位，其中2位为小数，即最大值为999.99。
varchar:可变长度字符串类型。varchar(10) ‘aaa’ 占3位
datetime:日期时间类型。yyyy-MM-dd hh:mm:ss
char:固定长度字符串类型。char(10) ‘aaa ’ 占10位
text:大文本字符串类型
blob:字节类型
date：日期类型，格式为：yyyy-MM-dd
time:时间类型，格式为：hh:mm:ss
timestamp:时间戳类型 yyyy-MM-dd hh:mm:ss 会自动赋值

主键约束：primary key,要求被修饰的字段：唯一和非空
唯一约束：unique，要求被修饰的字段：唯一
非空约束：not null，要求被修饰的字段：非空



创建数据库
create database dbname default character set utf8 collate utf8_general_ci


删除数据库
drop database dbname


切换数据库
use dbname


重命名数据库
sp_renamedb 'old_name', 'new_name'


修改数据库字符集
ALTER DATABASE <db_name> DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;


创建表
create table tablename (
	id INT(11) UNSIGNED AUTO_INCREMENT PRIMARY KEY, 
	name VARCHAR(20) NOT NULL,
	age INT(11) NOT NULL,
	email VARCHAR(20) NOT NULL
	);  



删除表
drop table tablename


重命名表
rename table 'old_name' to 'new_name'

复制表
create table new_table_name LIKE table_name;
insert into new_table_name SELECT * FROM table_name;


清空表
truncate table tablename;


插入数据
insert into tablename (name, age, email) values
('tana', 20, '1533366'),
('tom', 25, '1578945'),
('peter', 30, '102045');


查询数据
select * from tablename where id=1


删除数据
delete from tablename where 范围


更新数据
update tablename set field1=value1 where 范围


插入字段
alter table tablename add num INT(6) NOT NULL


修改字段
alter table tablename change num numxx
alter table tablename modify column num VARCHAR(50) NOT NULL default ''


删除字段
alter table tablename drop numxx


创建单列索引
alter table table_name add index index_name (column_list);
alter table table_name add unique (column_list);
alter table table_name add primary key (column_list);

创建组合索引
alter table table_name add index index_name (column1,column2(10),column3);

删除索引
alter table table_name drop index index_name;

全文索引
alter table table_name add fulltext(column1, column2)
select * from table_name where match(column1, column2) against(‘xxx′, ‘sss′, ‘ddd′)

显示索引
show keys from table_name 
explain  select * from students where stud_id = '1';


查找
select * from stu where gender='female' and age<50;
select * from stu where sid='S_1001' and sname='lisi';
select * from stu where sid in('S_1001','S_1002','S_1003');
select * from stu where sid not in('S_1001','S_1002','S_1003');
select * from stu where age is null;
select * from stu where age>=20 and age<=40;
select * from stu where age between 20 and 40;
select * from stu where stu where gender!='male';
select * from stu where gender<>'male';
select * from stu where not gender='male';
select * from stu where not sname is null;
select * from stu where sname is not null;
select * from stu where sname like '_____'; -- 查询姓名由5个字母构成的学生记录
select * from stu where sname like '____i'; -- 查询姓名由5个字母构成，并且第5个字母为“i”的学生
select * from stu where sname like 'z%'; -- 查询姓名以“z”开头的学生记录
select * from stu where sname like '_i%';-- 查询姓名中第2个字母为“i”的学生记录
select * from stu where sname like '%a%';-- 查询姓名中包括“a”字母的学生记录


排序
select * from stu order by age asc; -- 升序排序，也可以不加asc，默认为升序
select * from stu order by age desc; --降序
select * from emp order by sal desc,empno asc;-- 按月薪降序排序，如果月薪相同时，按编号升序排序。只有在前一个条件相同时，后一个条件才会起作用。


聚合
select count(*) as cnt from emp;-- 计算emp表中记录数
select count(comm) cnt from emp;-- 查询emp表中拥有佣金的人数，因为count()函数中给出的是comm列，那么只统计comm列非null的行数。
select count(*) from emp where sal>2500;-- 查询emp表中月薪大于2500的人数
select count(comm),count(mgr) from emp; -- 查询有佣金的人数，以及由领导的人数
select sum(sal) from emp; -- 查询所有雇员的佣金和
select sum(sal),sum(comm) from emp; -- 查询所有雇员月薪和，以及所有雇员佣金和
select sum(sal+ifnumm(comm,0)) from emp; -- 查询所有雇员月薪+佣金和
select avg(sal) from emp;
select max(sal),min(sal) from emp;-- 查询最高工资和最低工资


分组查询
select deptno,sum(sal) from emp group by deptno;-- 查询每个部门的编号和每个部门的工资和
select deptno,count(*) from emp group by deptno;-- 查询每个部门的部门编号以及每个部门的人数
select deptno,count(*) from emp where sal>1500 group by deptno;-- 查询每个部门的编号以及每个部门工资大于1500的人数
 
多个select套嵌查询
select t.client_ip, count(*) as num_host, sum(t.num_host) as num from (select client_ip, client_host, count(*) as num_host from dns_req_list group by client_ip, client_host) t group by t.client_ip order by num desc limit 0,100

2张表关联
table1 LEFT JOIN table2 ON table1.firstname = table2.firstname


3张表关联
(table1 LEFT JOIN table2 ON table1.firstname = table2.firstname) LEFT JOIN table3 ON table1.firstname = table3.firstname


select t1.client_host, t1.num, t2.num_err from (select client_host, count(*) as num from dns_req_list group by client_host) t1 left join (select client_host, count(*) as num_err from dns_err_list where req_status = "SERVFAIL" group by client_host) t2 on t1.client_host=t2.client_host order by num desc limit 0,10

select t3.client_ip, t3.num_host, t3.num, t2.num_err from (select t1.client_ip, count(*) as num_host, sum(t1.num_host) as num from (select client_ip, client_host, count(*) as num_host from dns_req_list'+whereStr+' group by client_ip, client_host) t1 group by t1.client_ip) t3 left join (select client_ip, count(*) as num_err from dns_err_list where req_status = "SERVFAIL" group by client_ip) t2 on t3.client_ip=t2.client_ip order by num desc limit 0,10


导出数据
mysqldump -u username -p password -h hostname -P port databasename > newdb.sql

导出单个数据表结构和数据
mysqldump -u username -p password -h hostname -P port databasename tablename > newtable.sql

导出查询的数据
mysql -h地址 -P端口 -u用户名 -p密码 -N -e"SQL语句" 数据库名 > filename
SELECT × FROM users WHERE name="xx" INTO OUTFILE '/home/users.csv'

导入数据
mysql -u username -p password -h hostname -P port databasename < file.sql
mysql> source E:\test.sql


sqlite3 /media/xian/Work/myproject-suqueen/ott-dns-info-docker/volumes/src/db/ott-dns-info.db '.dump power_list' > power_list.sql

sqlite3 /media/xian/Work/myproject-suqueen/ott-dns-info-docker/volumes/src/db/ott-dns-info.db '.read alarm_list.sql' 


超时时间
show global variables like 'wait_timeout';  
set global wait_timeout=28800000;  


select @@sql_mode;
set  @@global.sql_mode="STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION"


#启动MySQL
systemctl start mysqld
 
#启动成功后可以查看初始化密码随机生成的
cat /var/log/mysqld.log | grep password
 
#登录MySQL修改mysql用户密码
mysql -u root -p
mysql> ALTER USER 'root'@'%' IDENTIFIED BY 'yourpassword';
#远程设置
mysql> use mysql;
mysql> update user set host='%' where user='root';
#授权用户名的权限，赋予任何主机访问数据的权限
mysql> GRANT ALL PRIVILEGES ON *.* TO 'root'@'%'WITH GRANT OPTION;
mysql> FLUSH PRIVILEGES;

select host,user,authentication_string from mysql.user;

/etc/mysql/my.cnf
default_authentication_plugin=mysql_native_password
ALTER USER 'root'@'%' IDENTIFIED WITH mysql_native_password BY 'ott@123456';


查看数据存放目录
show variables like '%datadir%';
/var/lib/mysql


查看所有数据库容量大小
select
table_schema as '数据库',
sum(table_rows) as '记录数',
sum(truncate(data_length/1024/1024, 2)) as '数据容量(MB)',
sum(truncate(index_length/1024/1024, 2)) as '索引容量(MB)'
from information_schema.tables
group by table_schema
order by sum(data_length) desc, sum(index_length) desc;

更新数据库各表容量大小
analyze table tablename
set global information_schema_stats_expiry=0

查看数据库各表容量大小
select
table_schema as '数据库',
table_name as '表名',
table_rows as '记录数',
truncate(data_length/1024/1024, 2) as '数据容量(MB)',
truncate(index_length/1024/1024, 2) as '索引容量(MB)'
from information_schema.tables
where table_schema='mydb'
order by data_length desc, index_length desc;

MySQL千万级别数据查询速度6000ms
MySQL单条插入速度10ms
MySQL1000条批量插入速度30ms
MySQL10000条批量插入速度200ms
MySQL100000条批量插入速度2000ms


